version: "2.1"

executors:
  python-3:
    docker:
      - image: circleci/python:3.7

workflows:
  version: "2"
  build-workflow:
    jobs:
      - build-docs
      - trigger-docs-build:
          requires:
            - build-docs
      - run-tests
  release-workflow:
    jobs:
      - upload-package:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          context: org-global

jobs:
  build-docs:
    executor: python-3
    steps:
      - checkout
      - run:
          name: Build documentation
          command: |
            export PATH=$PATH:$HOME/.local/bin

            echo 'Installing requirements...'
            pip install --user -e .
            pip install --user '.[dev]'

            echo 'Building documentation...'
            ./setup.py build_sphinx

  upload-package:
    executor: python-3
    steps:
      - checkout
      - run:
          name: Upload python source distribution
          command: |
            export PATH=$PATH:$HOME/.local/bin

            echo 'Installing twine...'
            pip install -q --user twine

            echo 'Verifying package metadata...'
            ./setup.py check --metadata --restructuredtext --strict

            echo 'Building and verifying package distribution...'
            rm -fr dist
            ./setup.py -q sdist
            twine check dist/*

            echo 'Uploading distribution...'
            twine upload dist/*

  trigger-docs-build:
    executor: python-3
    steps:
      - checkout
      - run:
          name: Trigger Read the Docs build
          command: |
            curl --request POST \
                 --data "token=$READTHEDOCS_TOKEN" \
                 --data 'branches=master' \
                 --header 'Email-Address: daveshawley+rtd@gmail.com' \
                 https://readthedocs.org/api/v2/webhook/cavy/91155/

  run-tests:
    executor: python-3
    steps:
      - checkout
      - run:
          name: Install tools
          command: |
            pip install -q --user '.[dev]'
      - run:
          name: Run tests
          command: |
            export PATH=$PATH:$HOME/.local/bin
            mkdir -p build/circleci/nosetests
            nosetests --with-coverage \
                      --with-xunit --xunit-file=build/nosetests.xml
            coverage report
            coverage xml -o build/coverage.xml
            # required for store_test_results 
            cp build/nosetests.xml build/circleci/nosetests/results.xml
      - store_test_results:
          path: build/circleci
      - run:
          name: Upload coverage to coveralls
          command: |
            export PATH=$PATH:$HOME/.local/bin
            if test -n "$COVERALLS_REPO_TOKEN"
            then
              pip install -q --user coveralls
              coveralls
            else
              echo 'COVERALLS_REPO_TOKEN is not defined, skipping upload.'
            fi
